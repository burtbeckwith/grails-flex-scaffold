/**
 * ${className} was generated by GFS
 */
package vo.${domainClass.propertyName} {

<%
import org.cubika.labs.scaffolding.utils.ConstraintValueUtils as CVU
import org.cubika.labs.scaffolding.utils.FlexScaffoldingUtils as FSU

FSU.getPropertiesWithoutIdentity(domainClass, false, false).each {
	def imp = FSU.getImport4AS3(it)
	if (imp) {
		println "	${imp}"
	}
}
props = FSU.getPropertiesWithIdentity(domainClass,false)

String superClassName = FSU.getSuperClassName(domainClass)
if (superClassName) {
	println "	import vo.${superClassName}.${FSU.capitalize(superClassName)}VO"
}
%>
	[Bindable]
	[RemoteClass(alias='${domainClass.fullName}')]
<%
print "	public class ${className}VO"
if (superClassName) {
	print " extends ${FSU.capitalize(superClassName)}VO"
}
println " {"

if (!superClassName) {
	println "		//Identity"
	props.each {
		if (it.isIdentity() || it.name == "version") {
			println "		public var ${it.name}:${FSU.getClass4AS3(it)};"
		}
	}
}%>		//Properties
<%
props.each {
	if (!it.isIdentity() && it.name != "version") {
		def property = FSU.getClass4AS3(it)
		if (property) {
			println "		public var ${it.name}:${property};"
		}
	}
}

if (CVU.multiselection(domainClass)) {
	println "		//Transient Properties"
	println "		[Transient]"
	println "		public var selectedCheck:Boolean;"
}
%>	}
}
